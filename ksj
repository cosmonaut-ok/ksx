#!/usr/bin/env python3

from os.path import join, realpath, dirname
import subprocess, argparse
from werbs import Werbs

parser = argparse.ArgumentParser()

parser.add_argument("describe_jobs_pos", help="Get job", type=str, nargs='*')

# command arguments group
cagroup=parser.add_argument_group('Werb arguments')

# service arguments group
sagroup=parser.add_argument_group('Service arguments')

cagroup.add_argument('-l', '--list',
                    action='store_true',
                    dest='list',
                    help='Suppress Output'
                    )

sagroup.add_argument('-o', '--output',
                    type=str,
                    dest='output',
                    help='output format json|yaml|wide|custom-columns=...|custom-columns-file=...|go-template=...|go-template-file=...|jsonpath=...|jsonpath-file=...]'
                    )

sagroup.add_argument('-A', '--all-namespaces',
                    action='store_true',
                    dest='all_namespaces',
                    help='Operate with resources from all namespaces'
                    )

cagroup.add_argument('-d', '--describe',
                    type=str,
                    dest='describe',
                    help='describe job'
                    )

cagroup.add_argument('--logs',
                    type=str,
                    dest='logs',
                    help='logs from pod'
                    )

cagroup.add_argument('--del', '--delete',
                    type=str,
                    dest='delete',
                    help='delete pod'
                    )

cagroup.add_argument('-e', '--edit',
                    type=str,
                    dest='edit',
                    help='edit job'
                    )

sagroup.add_argument('-t', '--trace',
                    action='store_true',
                    dest='trace',
                    help='trace real kubectl commands'
                    )

sagroup.add_argument('--labels',
                    type=str,
                    dest='labels',
                    help='Use label to filter out resources'
                    )

cagroup.add_argument('--wat',
                    action='store_true',
                    dest='wat',
                    help='Manual about kubernetes job'
                    )

sagroup.add_argument('-v', '--version',
                    action='store_true',
                    dest='version',
                    help='show version of application'
                    )

args = parser.parse_args()

global out_suffix, kctl_bin, werbs

kctl_bin = "kubectl"

config=join(dirname(realpath(__file__)), 'ks.json')

werbs = Werbs(config_path=config, out_format=args.output, labels=args.labels, kctl_bin=kctl_bin, all_ns=args.all_namespaces, trace=args.trace)

if args.output:
    out_suffix = " -o " + args.output
else:
    out_suffix = ""

    
if args.list:
    werbs.print_of("jobs")
elif args.describe:
    werbs.describe_of("jobs/{}".format(args.describe))
elif args.edit:
    werbs.edit_of("jobs/{}".format(args.edit))
elif args.delete:
    werbs.delete_of("jobs/{}".format(args.delete))
elif args.logs:
    werbs.logs_of("jobs/{}".format(args.logs))
elif args.wat:
    werbs.explain_of("jobs")
elif args.version:
    werbs.print_version()
elif args.describe_jobs_pos:
    werbs.describe_of("jobs/{}".format(args.describe_jobs_pos[0]))
else: # default action is "get namespaces"
    werbs.print_of("jobs")
