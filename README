# NOTE: projest is under active development. Some functions can work incorrectly or not work at al

kwX - kubectl wrapper eXtensible.

# TODO:

implement --watch subargument

ksTools - is a set of tools, wrapped over kubectl and following unixway design of command line tools:

- each tool do one thing well
- each tool has short name
- each tool has default actions (e.g. `ksn` w/o arguments prints list of namespaces and `ksn NAMESPACE` set to use NAMESPACE as default one)
- each tool bound to single kubernetes resource, or logical object
- each tool has standard collection of keys (the same as other)

keys:

| -l --list   | get <smth>                                                   | main |
| -A          | all namespaces/all containers (in case of e.g. logs command) | sub  |
| -o --output | output format                                                | sub  |
| -L --logs   | logs                                                         | main |
| -a --attach | attach to the pod`s container                                | main |
| -s --shell  | get shell in the pod                                         | main |
| -d describe | describe resource                                            | main |
| --wat       | explain resources, that managed by tool                      | main |
| --labels    | filter resources by label                                    | sub  |


ksc  ksn  ksp  kspvc

--grep should be implemented


apiservices.apiregistration.k8s.io                           -
networkpolicies.networking.k8s.io                            -
backendconfigs.cloud.google.com                              -

capacityrequests.internal.autoscaling.k8s.io                 -
nodes.metrics.k8s.io                                         -
certificaterequests.cert-manager.io                          -
orders.acme.cert-manager.io                                  -
certificates.cert-manager.io                                 -
persistentvolumeclaims                                       -
certificatesigningrequests.certificates.k8s.io               -
persistentvolumes                                            -
challenges.acme.cert-manager.io                              -
poddisruptionbudgets.policy                                  -
clusterissuers.cert-manager.io                               -

clusterrolebindings.rbac.authorization.k8s.io                -
podsecuritypolicies.policy                                   -
clusterroles.rbac.authorization.k8s.io                       -
pods.metrics.k8s.io                                          -
componentstatuses                                            -
podtemplates                                                 -
configmaps                                                   -
priorityclasses.scheduling.k8s.io                            -
controllerrevisions.apps                                     -
replicasets.apps                                             -
cronjobs.batch                                               -
replicationcontrollers                                       -
csidrivers.storage.k8s.io                                    -
resourcequotas                                               -
csinodes.storage.k8s.io                                      -
rolebindings.rbac.authorization.k8s.io                       -
customresourcedefinitions.apiextensions.k8s.io               -
roles.rbac.authorization.k8s.io                              -
daemonsets.apps                                              -
runtimeclasses.node.k8s.io                                   -
deployments.apps                                             -
scheduledscalers.scaling.k8s.restdev.com                     -
endpoints                                                    -
secrets                                                      -
endpointslices.discovery.k8s.io                              -
serviceaccounts                                              -
events                                                       -
servicenetworkendpointgroups.networking.gke.io               -
frontendconfigs.networking.gke.io                            -
services                                                     -
horizontalpodautoscalers.autoscaling                         -
statefulsets.apps                                            -
ingressclasses.networking.k8s.io                             -
storageclasses.storage.k8s.io                                -
ingresses.extensions                                         -
storagestates.migration.k8s.io                               -
ingresses.networking.k8s.io                                  -
storageversionmigrations.migration.k8s.io                    -
issuers.cert-manager.io                                      -
updateinfos.nodemanagement.gke.io                            -
jobs.batch                                                   -
validatingwebhookconfigurations.admissionregistration.k8s.io -
leases.coordination.k8s.io                                   -
volumeattachments.storage.k8s.io                             -
limitranges                                                  -
volumesnapshotclasses.snapshot.storage.k8s.io                -
managedcertificates.networking.gke.io                        -
volumesnapshotcontents.snapshot.storage.k8s.io               -
mutatingwebhookconfigurations.admissionregistration.k8s.io   -
volumesnapshots.snapshot.storage.k8s.io                      -
namespaces                                                   +
contexts                                                     +
nodes                                                        -
pods                                                         +



## Installation

run
```bash
$ ./ksx --install
$ ./ksx --add-to-path # optional
$ ./ksx --install-completions # optional
```
Installation bin path: <USER_HOME>/bin
Kubectl default path: <USER_HOME>/bin
Installation config path: <USER_HOME>/.conf/ksx/ksx.json
Ksx cache path: <USER_HOME>/.conf/ksx/ksx.json

### (Re)generate configfile
```bash
./ksx --genconfig [--kubectl-path <custom path>] [--kubectl-defcmd <custom kubectl default exec command (e.g. /bin/zsh)>]
```
